# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Designer/help_window.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_help_window(object):
    def setupUi(self, help_window):
        help_window.setObjectName("help_window")
        help_window.resize(700, 500)
        help_window.setMinimumSize(QtCore.QSize(700, 500))
        help_window.setMaximumSize(QtCore.QSize(700, 500))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 86, 145))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 86, 145))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 86, 145))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 86, 145))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        help_window.setPalette(palette)
        self.scrollArea = QtWidgets.QScrollArea(help_window)
        self.scrollArea.setGeometry(QtCore.QRect(20, 20, 661, 471))
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, -235, 1132, 687))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.scrollAreaWidgetContents)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(250, 250, 250))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(250, 250, 250))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(250, 250, 250))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(250, 250, 250))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(250, 250, 250))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(250, 250, 250))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(250, 250, 250))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(250, 250, 250))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(250, 250, 250))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.label.setPalette(palette)
        self.label.setStyleSheet("background-color: rgb(250, 250, 250);")
        self.label.setObjectName("label")
        self.horizontalLayout.addWidget(self.label)
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)

        self.retranslateUi(help_window)
        QtCore.QMetaObject.connectSlotsByName(help_window)

    def retranslateUi(self, help_window):
        _translate = QtCore.QCoreApplication.translate
        help_window.setWindowTitle(_translate("help_window", "Form"))
        self.label.setWhatsThis(_translate("help_window", "<html><head/><body><p align=\"justify\"><br/></p><p align=\"justify\"><br/></p></body></html>"))
        self.label.setText(_translate("help_window", "<html><head/><body><p align=\"justify\"><span style=\" font-size:14pt;\">Steps to use Numerikiando:</span></p><p align=\"justify\"><span style=\" font-size:14pt;\">1. Click on start to see the available modules</span></p><p align=\"justify\"><br/></p><p align=\"justify\"><span style=\" font-size:14pt;\">2. Click on some module (Numerical solutions of nonlinear equation, numerical solution of system of linear equations or interpolation)</span></p><p align=\"justify\"><br/></p><p align=\"justify\"><span style=\" font-size:14pt;\">3. For methods in which you will receive a function, you must follow the next syntaxis:</span></p><p align=\"justify\"><br/></p><p align=\"justify\"><span style=\" font-size:14pt;\">Natural Logarithm -&gt; log(x) or log(const)</span></p><p align=\"justify\"><span style=\" font-size:14pt;\">Exponential function -&gt; exp(x) or exp(const)</span></p><p align=\"justify\"><span style=\" font-size:14pt;\">Power functions -&gt; x**y or x**const</span></p><p align=\"justify\"><span style=\" font-size:14pt;\">Sine function -&gt; sin(x) or sin(const)</span></p><p align=\"justify\"><span style=\" font-size:14pt;\">Cosine function -&gt; cosine(x) or cosine(const)</span></p><p align=\"justify\"><span style=\" font-size:14pt;\">Tangent function -&gt; tan(x) or tan(const)</span></p><p align=\"justify\"><br/></p><p align=\"justify\"><span style=\" font-size:14pt;\">Where x is a variable and const is a real number.</span></p><p align=\"justify\"><span style=\" font-size:14pt;\"><br/></span></p><p align=\"justify\"><span style=\" font-size:14pt;\"><br/></span></p><p align=\"justify\"><span style=\" font-size:14pt;\"><br/></span></p></body></html>"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    help_window = QtWidgets.QWidget()
    ui = Ui_help_window()
    ui.setupUi(help_window)
    help_window.show()
    sys.exit(app.exec_())
